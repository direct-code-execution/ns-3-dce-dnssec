diff -r 2a6212bffe85 model/dce-manager.cc
--- a/model/dce-manager.cc	Thu Dec 19 22:00:01 2013 +0900
+++ b/model/dce-manager.cc	Mon Apr 21 13:26:05 2014 +0900
@@ -115,6 +115,24 @@
   Object::DoDispose ();
 }
 
+// January 1st, 2010, 00:00:00
+uint32_t DceManager::m_timeBase = 1262304000;
+
+void
+DceManager::SetTimeBase (uint32_t timeBase)
+{
+  m_timeBase = timeBase;
+  return;
+}
+
+uint32_t
+DceManager::GetTimeBase (void)
+{
+  return m_timeBase;
+  //   unsigned long secondsSinceEpochOnFridayApril042008 = 1207284276;
+  //   return secondsSinceEpochOnFridayApril042008;
+}
+
 struct ::Libc *
 DceManager::GetLibc (void)
 {
diff -r 2a6212bffe85 model/dce-manager.h
--- a/model/dce-manager.h	Thu Dec 19 22:00:01 2013 +0900
+++ b/model/dce-manager.h	Mon Apr 21 13:26:05 2014 +0900
@@ -125,6 +125,8 @@
   void SuspendTemporaryTask (uint16_t pid);
   struct Process* CreateProcess (std::string name, std::string stdinfilename, std::vector<std::string> args,
                                  std::vector<std::pair<std::string,std::string> > envs, int pid);
+  static void SetTimeBase (uint32_t timeBase);
+  static uint32_t GetTimeBase (void);
 
 private:
   // inherited from Object.
@@ -161,6 +163,7 @@
   // If true close stderr and stdout between writes .
   bool m_minimizeFiles;
   std::string m_virtualPath;
+  static uint32_t m_timeBase;
 };
 
 } // namespace ns3
diff -r 2a6212bffe85 model/dce-signal.h
--- a/model/dce-signal.h	Thu Dec 19 22:00:01 2013 +0900
+++ b/model/dce-signal.h	Mon Apr 21 13:26:05 2014 +0900
@@ -16,6 +16,9 @@
 int dce_kill (pid_t pid, int sig);
 int dce_pthread_kill (pthread_t thread, int sig);
 void dce_abort ();
+void dce___assert_fail (const char *__assertion, const char *__file,
+                        unsigned int __line, const char *__function);
+void dce___stack_chk_fail (void);
 int dce_sigprocmask (int how, const sigset_t *set, sigset_t *oldset);
 int dce_sigwait (const sigset_t *set, int *sig);
 
diff -r 2a6212bffe85 model/dce.cc
--- a/model/dce.cc	Thu Dec 19 22:00:01 2013 +0900
+++ b/model/dce.cc	Mon Apr 21 13:26:05 2014 +0900
@@ -265,6 +265,18 @@
   dce_exit (-2);
 }
 
+void dce___assert_fail (const char *__assertion, const char *__file,
+                        unsigned int __line, const char *__function)
+{
+  dce_abort ();
+}
+
+void
+dce___stack_chk_fail (void)
+{
+  dce_abort ();
+}
+
 int dce_pause (void)
 {
   //Thread *current = Current ();
diff -r 2a6212bffe85 model/libc-dce.cc
--- a/model/libc-dce.cc	Thu Dec 19 22:00:01 2013 +0900
+++ b/model/libc-dce.cc	Mon Apr 21 13:26:05 2014 +0900
@@ -138,6 +138,7 @@
 __THROW;
 extern int __obstack_vprintf_chk (struct obstack *, int, const char *,
                                   _G_va_list) __THROW;
+extern void __stack_chk_fail (void);
 
 typedef void (*func_t)(...);
 
diff -r 2a6212bffe85 model/libc-ns3.h
--- a/model/libc-ns3.h	Thu Dec 19 22:00:01 2013 +0900
+++ b/model/libc-ns3.h	Mon Apr 21 13:26:05 2014 +0900
@@ -105,6 +105,8 @@
 DCE (clearenv)
 NATIVE (qsort)
 DCE (abort)
+DCE (__assert_fail)
+DCE (__stack_chk_fail)
 DCE (mkstemp)
 DCE (rename)
 
diff -r 2a6212bffe85 model/linux-socket-fd-factory.cc
--- a/model/linux-socket-fd-factory.cc	Thu Dec 19 22:00:01 2013 +0900
+++ b/model/linux-socket-fd-factory.cc	Mon Apr 21 13:26:05 2014 +0900
@@ -382,6 +382,7 @@
 void
 LinuxSocketFdFactory::DevXmit (struct SimKernel *kernel, struct SimDevice *dev, unsigned char *data, int len)
 {
+  NS_LOG_FUNCTION (dev);
   LinuxSocketFdFactory *self = (LinuxSocketFdFactory *)kernel;
   NetDevice *nsDev = (NetDevice *)self->m_exported->dev_get_private (dev);
   NS_ASSERT (len >= 14);
diff -r 2a6212bffe85 model/linux/linux-socket-impl.cc
--- a/model/linux/linux-socket-impl.cc	Thu Dec 19 22:00:01 2013 +0900
+++ b/model/linux/linux-socket-impl.cc	Mon Apr 21 13:26:05 2014 +0900
@@ -514,6 +514,31 @@
 }
 
 void
+LinuxSocketImpl::Setsockopt (int level, int optname,
+                             const void *optval, socklen_t optlen)
+{
+  NS_LOG_FUNCTION (level << optname << optval << optlen);
+  uint16_t pid = EnterFakeTask ();
+  int ret = this->m_kernsock->Setsockopt (level, optname,
+                                          optval, optlen);
+  NS_LOG_INFO ("setsockopt returns " << ret << " errno " << Current ()->err);
+  LeaveFakeTask (pid);
+  return;
+}
+int
+LinuxSocketImpl::Getsockopt (int level, int optname,
+                             void *optval, socklen_t *optlen)
+{
+  NS_LOG_FUNCTION (level << optname << optval << optlen);
+  uint16_t pid = EnterFakeTask ();
+  int ret = this->m_kernsock->Getsockopt (level, optname,
+                                          optval, optlen);
+  NS_LOG_INFO ("getsockopt returns " << ret << " errno " << Current ()->err);
+  LeaveFakeTask (pid);
+  return ret;
+}
+
+void
 LinuxSocketImpl::Poll ()
 {
   NS_LOG_FUNCTION (this);
@@ -588,7 +613,7 @@
           else
             {
               // FIXME: handle closed socket
-              if (mask & POLLRDHUP || mask & POLLHUP)
+              if (mask & POLLRDHUP || mask & POLLHUP || mask & POLLERR)
                 {
                   NS_LOG_FUNCTION ("socket has closed ?" << mask);
                   // FIXME: may need m_closed flag
diff -r 2a6212bffe85 model/linux/linux-socket-impl.h
--- a/model/linux/linux-socket-impl.h	Thu Dec 19 22:00:01 2013 +0900
+++ b/model/linux/linux-socket-impl.h	Mon Apr 21 13:26:05 2014 +0900
@@ -69,6 +69,11 @@
   virtual bool GetAllowBroadcast () const;
   void Poll ();
 
+  void Setsockopt (int level, int optname,
+                   const void *optval, socklen_t optlen);
+  int Getsockopt (int level, int optname,
+                void *optval, socklen_t *optlen);
+
   Address PosixAddressToNs3Address (const struct sockaddr *my_addr, socklen_t addrlen);
   int Ns3AddressToPosixAddress (const Address& nsaddr,
                                 struct sockaddr *addr, socklen_t *addrlen);
