diff -r b8ced6ccb82c model/dce-credentials.cc
--- a/model/dce-credentials.cc	Thu Apr 18 17:28:13 2013 +0900
+++ b/model/dce-credentials.cc	Fri Aug 23 16:02:01 2013 +0900
@@ -53,3 +53,15 @@
   int ret = eaccess (rPath.c_str (), mode);
   return ret;
 }
+int dce_chown(const char *path, uid_t owner, gid_t group)
+{
+  // XXX
+  return 0;
+}
+
+int dce_initgroups(const char *user, gid_t group)
+{
+  // XXX
+  return 0;
+}
+
diff -r b8ced6ccb82c model/dce-poll.cc
--- a/model/dce-poll.cc	Thu Apr 18 17:28:13 2013 +0900
+++ b/model/dce-poll.cc	Fri Aug 23 16:02:01 2013 +0900
@@ -187,11 +187,13 @@
   // Some  code  calls  select() with all three sets empty, nfds zero, and a
   // non-NULL timeout as a fairly portable way to sleep with subsecond
   // precision.
+#if 0
   if (nfds == 0 && !timeout)
     {
       current->err = EINVAL;
       return -1;
     }
+#endif
   struct pollfd pollFd[nfds];
   int j = 0;
 
diff -r b8ced6ccb82c model/dce-stdio.cc
--- a/model/dce-stdio.cc	Thu Apr 18 17:28:13 2013 +0900
+++ b/model/dce-stdio.cc	Fri Aug 23 16:02:01 2013 +0900
@@ -759,6 +759,16 @@
   va_end (ap);
   return retval;
 }
+int dce___vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
+						size_t __slen,
+						__const char *__restrict __format, _G_va_list __ap)
+{
+  NS_LOG_FUNCTION (Current () << UtilsGetNodeId ());
+  NS_ASSERT (Current () != 0);
+
+  int retval = vsnprintf (__s, __n, __format, __ap);
+  return retval;
+}
 void dce___fpurge (FILE *stream)
 {
   NS_LOG_FUNCTION (Current () << UtilsGetNodeId () << stream);
diff -r b8ced6ccb82c model/dce-stdio.h
--- a/model/dce-stdio.h	Thu Apr 18 17:28:13 2013 +0900
+++ b/model/dce-stdio.h	Fri Aug 23 16:02:01 2013 +0900
@@ -71,6 +71,10 @@
 int dce_asprintf (char **strp, const char *fmt, ...);
 int dce_vasprintf (char **strp, const char *fmt, va_list ap);
 int dce_vsnprintf (char *s, size_t si, const char *f, va_list ap);
+int dce___vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
+                                               size_t __slen,
+                         __const char *__restrict __format, _G_va_list __ap);
+
 
 #ifdef __cplusplus
 }
diff -r b8ced6ccb82c model/dce-syslog.cc
--- a/model/dce-syslog.cc	Thu Apr 18 17:28:13 2013 +0900
+++ b/model/dce-syslog.cc	Fri Aug 23 16:02:01 2013 +0900
@@ -66,4 +66,6 @@
   Process *process = Current ()->process;
 
   vfprintf (process->syslog, message, args);
+  fprintf (process->syslog, "\n");
+
 }
diff -r b8ced6ccb82c model/dce-unistd.h
--- a/model/dce-unistd.h	Thu Apr 18 17:28:13 2013 +0900
+++ b/model/dce-unistd.h	Fri Aug 23 16:02:01 2013 +0900
@@ -77,6 +77,8 @@
 
 ssize_t dce_pread (int fd, void *buf, size_t count, off_t offset);
 ssize_t dce_pwrite (int fd, const void *buf, size_t count, off_t offset);
+int dce_chown(const char *path, uid_t owner, gid_t group);
+int dce_initgroups(const char *user, gid_t group);
 
 int dce_daemon (int nochdir, int noclose);
 
diff -r b8ced6ccb82c model/dce.cc
--- a/model/dce.cc	Thu Apr 18 17:28:13 2013 +0900
+++ b/model/dce.cc	Fri Aug 23 16:02:01 2013 +0900
@@ -142,7 +142,7 @@
       return -1;
     }
   if (sgid != (gid_t)-1
-      || !is_set_ucapable (sgid))
+      && !is_set_ucapable (sgid))
     {
       current->err = EPERM;
       return -1;
diff -r b8ced6ccb82c model/libc-dce.cc
--- a/model/libc-dce.cc	Thu Apr 18 17:28:13 2013 +0900
+++ b/model/libc-dce.cc	Fri Aug 23 16:02:01 2013 +0900
@@ -96,6 +96,7 @@
 #include <langinfo.h>
 #include <sys/vfs.h>
 #include <termio.h>
+#include <assert.h>
 
 extern void __cxa_finalize (void *d);
 extern int __cxa_atexit (void (*func)(void *), void *arg, void *d);
@@ -140,6 +141,7 @@
 typedef void (*func_t)(...);
 
 extern "C" {
+extern void *__memcpy_chk(void *dest, const void *src, size_t n, size_t __destlen);
 
 void libc_dce (struct Libc **libc)
 {
diff -r b8ced6ccb82c model/libc-ns3.h
--- a/model/libc-ns3.h	Thu Apr 18 17:28:13 2013 +0900
+++ b/model/libc-ns3.h	Fri Aug 23 16:02:01 2013 +0900
@@ -114,6 +114,7 @@
 NATIVE (strcoll)
 NATIVE (memset)
 NATIVE (memcpy)
+NATIVE (__memcpy_chk)
 NATIVE (bcopy)
 NATIVE (memcmp)
 NATIVE (memmove)
@@ -252,6 +253,8 @@
 DCE (daemon)
 DCE (alarm)
 DCE (readlink)
+DCE (chown)
+DCE (initgroups)
 
 // SYS/UIO.H
 DCE (readv)
@@ -265,8 +268,8 @@
 DCE (setlinebuf)
 DCE (fseek)
 DCE (ftell)
-DCE (fseeko)
-DCE (ftello)
+//DCE (fseeko)
+//DCE (ftello)
 DCE (rewind)
 DCE (fgetpos)
 DCE (fsetpos)
@@ -307,6 +310,8 @@
 DCE (remove)
 //NATIVE (sscanf)
 NATIVE_WITH_ALIAS2 (sscanf, __isoc99_sscanf)
+NATIVE (flockfile)
+NATIVE (funlockfile)
 
 // STDARG.H
 DCE (vprintf)
@@ -375,6 +380,7 @@
 NATIVE (sigismember)
 DCE (sigprocmask)
 DCE    (sigwait)
+DCE    (kill)
 
 // PTHREAD.H
 DCE (pthread_create)
@@ -413,6 +419,11 @@
 NATIVE (pthread_setcancelstate)
 NATIVE (pthread_sigmask)
 NATIVE (pthread_equal)
+NATIVE (pthread_spin_init)
+NATIVE (pthread_spin_lock)
+NATIVE (pthread_spin_unlock)
+NATIVE (pthread_spin_destroy)
+
 
 // SEMAPHORE.H
 DCE (sem_init)
@@ -508,6 +519,8 @@
 NATIVE (bindtextdomain)
 NATIVE (textdomain)
 NATIVE (gettext)
+NATIVE (catopen)
+NATIVE (catgets)
 
 // PWD.H
 NATIVE (getpwnam)
@@ -569,6 +582,7 @@
 DCE    (__fprintf_chk)
 DCE    (__snprintf_chk)
 DCE    (__errno_location)
+DCE    (__vsnprintf_chk)
 
 DCE    (__xstat)
 DCE    (__lxstat)
diff -r b8ced6ccb82c model/process-delay-model.cc
--- a/model/process-delay-model.cc	Thu Apr 18 17:28:13 2013 +0900
+++ b/model/process-delay-model.cc	Fri Aug 23 16:02:01 2013 +0900
@@ -18,12 +18,14 @@
  * Author: Mathieu Lacage <mathieu.lacage@sophia.inria.fr>
  */
 #include "process-delay-model.h"
+#include "ns3/log.h"
 #include <sys/time.h>
 #include <time.h>
 
 namespace ns3 {
 
 NS_OBJECT_ENSURE_REGISTERED (ProcessDelayModel);
+NS_LOG_COMPONENT_DEFINE ("ProcessDelayModel");
 
 TypeId
 ProcessDelayModel::GetTypeId (void)
@@ -99,11 +101,13 @@
 void
 TimeOfDayProcessDelayModel::RecordStart (void)
 {
+  NS_LOG_FUNCTION (this);
   m_start = GetTimeOfDay ();
 }
 Time
 TimeOfDayProcessDelayModel::RecordEnd (void)
 {
+  NS_LOG_FUNCTION (this);
   Time delay = GetTimeOfDay () - m_start;
   if (delay.IsZero ())
     {
diff -r b8ced6ccb82c model/task-manager.cc
--- a/model/task-manager.cc	Thu Apr 18 17:28:13 2013 +0900
+++ b/model/task-manager.cc	Fri Aug 23 16:02:01 2013 +0900
@@ -445,6 +445,7 @@
             }
           if (m_reSchedule)
             {
+              NS_LOG_DEBUG ("Delayed schedule " << m_reScheduleTime);
               m_reSchedule = false;
               if (m_reScheduleTime > Time (0))
                 {
@@ -473,8 +474,8 @@
       // we have something to schedule from.
       // but, we have nothing to schedule to so, we go back to the main task.
       Time delay = m_delayModel->RecordEnd ();
-      NS_LOG_DEBUG ("Leaving " << m_current << ", delay " << delay << " entering main");
       struct Task *next = m_scheduler->PeekNext ();
+      NS_LOG_DEBUG ("Leaving " << m_current << ", delay " << delay << " next = " << next << " entering main");
       if (next != 0)
         {
           // but before leaving, we check if we have further processes active, and,
diff -r b8ced6ccb82c model/utils.cc
--- a/model/utils.cc	Thu Apr 18 17:28:13 2013 +0900
+++ b/model/utils.cc	Fri Aug 23 16:02:01 2013 +0900
@@ -145,6 +145,9 @@
 }
 static unsigned long TimeBase (void)
 {
+  static time_t g_time_base;
+  g_time_base = ::time (NULL);
+  return g_time_base;
 //   unsigned long secondsSinceEpochOnFridayApril042008 = 1207284276;
 //   return secondsSinceEpochOnFridayApril042008;
   return 1262304000; // January 1st, 2010, 00:00:00
